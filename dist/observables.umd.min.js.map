{"version":3,"sources":["webpack://Observables/webpack/universalModuleDefinition","webpack://Observables/webpack/bootstrap","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://Observables/(webpack)/buildin/global.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://Observables/./src/objectWatchProp.js","webpack://Observables/./src/objectCreateComputedProp.js","webpack://Observables/./src/arrayWatch.js","webpack://Observables/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","__webpack_exports__","GLOBAL","self","Function","g","this","eval","e","functionBindCall","functionBind","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","arr","isArray","Array","arrayIndexOf","forEach","indexOf","consoleLog","splice","console","log","SymbolIterator","error","warn","iterator","HTMLElementPrototype","HTMLElement","doc","document","head","appendChild","insertBefore","hasAttribute","setAttribute","removeAttribute","FakeIterator","values","slice","idx","total","length","constructor","next","configurable","response","done","_","undefined","nextIdx","Set","FakeSet","add","item","push","has","size","clear","delete","entries","cb","thisArg","[object Object]","reIsNativeCode","nextTick","setImediate","test","toString","Promise","resolved","resolve","fn","then","catch","immediates","processing","processPending","setTimeout","shift","isQueued","queuedCallbacks","flushQueue","callbacks","queue","callback","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","TRACKERS","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","ARRAY_MUTATING_METHODS","isPureObject","obj","NOTIFY_QUEUE","isNotifyQueued","objectWatchProp","prop","setupObjState","props","setupPropState","setupPropInterceptors","setupInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","unsetCallbackAsWatcherOf","watchers","destroy","writable","deep","setupCallbackStore","store","async","notify","val","parent","propOldDescriptor","getOwnPropertyDescriptor","set","newVal","priorVal","walk","force","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","queueCallbackAndScheduleRun","x","asDependent","setCallbackAsWatcherOf","setDependencyTracker","unsetDependencyTracker","stopTrackerNotification","stopWatchingAll","watchersSet","watching","watcherList","arrCurrentProto","__proto__","arrProtoInterceptor","method","args","objectCreateComputedProp","setter","propValue","newValue","needsInitialization","allowSet","needsNewValue","dependencyTracker","setPropValue","silentSet","forProp","arrayWatch"],"mappings":"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","file":"observables.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Observables\"] = factory();\n\telse\n\t\troot[\"Observables\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const isObject                 = obj => Object.prototype.toString.call(obj) === \"[object Object]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb(item, item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","import {objectDefineProperty, objectKeys, isArray} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport Set from \"@purtuga/common/src/jsutils/Set\"\r\nimport nextTick from \"@purtuga/common/src/jsutils/nextTick\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\"; // FIXME: this should be a Symbol()\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nconst TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\nconst isPureObject = obj => obj && Object.prototype.toString.call(obj) === \"[object Object]\";\r\nconst NOTIFY_QUEUE = new Set();\r\nlet isNotifyQueued = false;\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        setupPropState(obj, prop);\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        objectDefineProperty(obj, OBSERVABLE_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            deep: false,\r\n            value: {\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        });\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: propOldDescriptor.configurable || false,\r\n        enumerable: propOldDescriptor.enumerable || false,\r\n        get() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        set(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        }\r\n    });\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also make observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isPureObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        // OBJECT\r\n        if (isPureObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropState(obj, keys[i]);\r\n            setupPropInterceptors(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isPureObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n\r\n    queueCallbackAndScheduleRun();\r\n}\r\n\r\nexport function queueCallbackAndScheduleRun(cb) {\r\n    if (cb) {\r\n        pushCallbacksToQueue(cb);\r\n    }\r\n\r\n    if (isNotifyQueued || !NOTIFY_QUEUE.size) {\r\n        return;\r\n    }\r\n\r\n    isNotifyQueued = true;\r\n    nextTick(flushQueue);\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    NOTIFY_QUEUE.add(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction flushQueue() {\r\n    const queuedCallbacks = [...NOTIFY_QUEUE];\r\n    NOTIFY_QUEUE.clear();\r\n    isNotifyQueued = false;\r\n    for (let x=0, total=queuedCallbacks.length; x<total; x++) {\r\n        queuedCallbacks[x]();\r\n    }\r\n    queuedCallbacks.length = 0;\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        objectDefineProperty(callback, WATCHER_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                watching: new Set()\r\n            }\r\n        });\r\n        objectDefineProperty(callback, \"stopWatchingAll\", {\r\n            configurable: true,\r\n            writable: true,\r\n            value() {\r\n                callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                    watcherList.delete(callback)\r\n                );\r\n                callback[WATCHER_IDENTIFIER].watching.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            objectDefineProperty(arrProtoInterceptor, method, {\r\n                configurable: true,\r\n                writable: true,\r\n                value: function arrayMethodInterceptor(...args) {\r\n                    // FIXME: need to call `makeObservable` on any value that was inserted, if `deep` is true\r\n                    const response = arrCurrentProto[method].call(this, ...args);\r\n                    this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                    this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                    return response;\r\n                }\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        objectDefineProperty(arrProtoInterceptor, \"size\", {\r\n            configurable: true,\r\n            get() {\r\n                if (TRACKERS.size) {\r\n                    TRACKERS.forEach(\r\n                        this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                        this[OBSERVABLE_IDENTIFIER]\r\n                    );\r\n                }\r\n                return this.length;\r\n            }\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        objectDefineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, {\r\n            value: true\r\n        });\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        objectDefineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: arrProtoInterceptor\r\n        });\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","import {objectDefineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {\r\n    OBSERVABLE_IDENTIFIER,\r\n    objectWatchProp,\r\n    setDependencyTracker,\r\n    unsetDependencyTracker,\r\n    queueCallbackAndScheduleRun,\r\n    makeObservable\r\n} from \"./objectWatchProp\";\r\n\r\n/**\r\n * Creates a computed property on a given object.\r\n *\r\n * @param {Object} obj\r\n * @param {String} prop\r\n * @param {Function} setter\r\n *  A callback function that will be used to retrieve the computed prop's\r\n *  value. Function is called with a context (`this`) of the object and\r\n *  will receive one input param - the Object itself.\r\n * @param {Boolean} [enumerable=true]\r\n *\r\n */\r\nexport function objectCreateComputedProp(obj, prop, setter, enumerable = true) {\r\n    let propValue;\r\n    let newValue;\r\n    let needsInitialization = true;\r\n    let allowSet = false;\r\n    let needsNewValue = true;\r\n\r\n    const dependencyTracker = () => {\r\n        if (needsNewValue) {\r\n            return;\r\n        }\r\n\r\n        needsNewValue = true;\r\n\r\n        // If we have watchers on this computed prop, then queue the\r\n        // value generator function.\r\n        // else, just notify dependents.\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.size) {\r\n            queueCallbackAndScheduleRun(setPropValue);\r\n        }\r\n        else if (obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.size) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n        }\r\n\r\n        // FIXME: create option to ALWAYS trigger setter on change?\r\n        //          So that other system (like VueJS) can get notified of changes?\r\n    };\r\n\r\n    const setPropValue = silentSet => {\r\n        // if there is no longer a need to regenerate the value, exit.\r\n        // this can happen when other logic accesses the computed getter\r\n        // between scheduled updates.\r\n        if (!needsNewValue) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setDependencyTracker(dependencyTracker);\r\n            newValue = setter.call(obj, obj);\r\n            unsetDependencyTracker(dependencyTracker); // IMPORTANT: turn if off right after setter is run!\r\n\r\n            if (silentSet) {\r\n                propValue = newValue;\r\n\r\n                if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                    makeObservable(propValue);\r\n                }\r\n            } else {\r\n                // Update is done via the prop assignment, which means that\r\n                // handing of `deep` and all dependent/watcher notifiers is handled\r\n                // as part of the objectWatchProp() functionality.\r\n                // Doing the update this way also supports the use of these\r\n                // objects with other library that may also intercept getter/setters.\r\n                allowSet = true;\r\n                needsNewValue = false;\r\n                obj[prop] = newValue;\r\n            }\r\n        } catch (e) {\r\n            allowSet = false;\r\n            needsNewValue = false;\r\n            newValue = undefined;\r\n            unsetDependencyTracker(dependencyTracker);\r\n            throw e;\r\n        }\r\n\r\n        allowSet = false;\r\n        needsNewValue = false;\r\n        newValue = undefined;\r\n    };\r\n\r\n    dependencyTracker.asDependent = true;\r\n    dependencyTracker.forProp = setPropValue.forProp = prop;\r\n\r\n    // Does property already exists? Delete it.\r\n    if (prop in obj) {\r\n        delete obj[prop];\r\n\r\n        // Was prop an observable? if so, signal that interceptors must be redefined.\r\n        if (obj[OBSERVABLE_IDENTIFIER] && obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = true;\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: true,\r\n        enumerable: !!enumerable,\r\n        get() {\r\n            if (needsInitialization) {\r\n                needsInitialization = false;\r\n                setPropValue(true);\r\n            }\r\n            else if (needsNewValue) {\r\n                setPropValue();\r\n            }\r\n\r\n            return propValue;\r\n        },\r\n        set(newValue) {\r\n            if (allowSet) {\r\n                propValue = newValue;\r\n            }\r\n            return propValue;\r\n        }\r\n    });\r\n\r\n    objectWatchProp(obj, prop);\r\n}\r\n\r\nexport default objectCreateComputedProp;","import { OBSERVABLE_IDENTIFIER, makeArrayWatchable } from \"./objectWatchProp\";\r\n\r\n//========================================================================\r\n\r\n/**\r\n * Watch an array for changes.  Utiltiy will override the array's mutating methods\r\n * so that notification can be provided to watchers when it changes\r\n *\r\n * @param {Array} arr\r\n * @param {Function} [callback]\r\n *  If not defined, then array is simply made \"watchable\"\r\n */\r\nexport function arrayWatch(arr, callback) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        makeArrayWatchable(arr);\r\n    }\r\n\r\n    if (callback) {\r\n        arr[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n    }\r\n\r\n    const unWatch = () => arr[OBSERVABLE_IDENTIFIER].watchers.delete(callback);\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\nexport default arrayWatch;\r\n","export {\r\n    objectWatchProp,\r\n    makeObservable,\r\n    setDependencyTracker,\r\n    stopTrackerNotification,\r\n    unsetDependencyTracker\r\n} from \"./objectWatchProp\"\r\nexport {objectCreateComputedProp} from \"./objectCreateComputedProp\"\r\nexport {arrayWatch} from \"./arrayWatch\""],"sourceRoot":""}