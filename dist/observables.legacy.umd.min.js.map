{"version":3,"sources":["webpack://Observables/webpack/universalModuleDefinition","webpack://Observables/webpack/bootstrap","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://Observables/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://Observables/(webpack)/buildin/global.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://Observables/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://Observables/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://Observables/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://Observables/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://Observables/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://Observables/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://Observables/./src/objectWatchProp.js","webpack://Observables/./src/objectCreateComputedProp.js","webpack://Observables/./src/arrayWatch.js","webpack://Observables/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GLOBAL","_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__","global","self","Function","_typeof2","obj","iterator","constructor","_typeof","__webpack_exports__","g","this","e","functionBindCall","functionBind","toString","isObject","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","prop","setter","configurable","arguments","length","undefined","writable","descriptor","set","getPropertyDescriptor","arr","isArray","Array","arrayIndexOf","forEach","indexOf","consoleLog","splice","slice","console","log","SymbolIterator","error","warn","HTMLElementPrototype","HTMLElement","doc","document","head","appendChild","insertBefore","hasAttribute","getAttribute","setAttribute","removeAttribute","FakeIterator","values","idx","total","next","response","done","_","nextIdx","Set","FakeSet","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","TypeError","_nonIterableSpread","_defineProperty","add","item","push","has","size","clear","delete","entries","cb","thisArg","_this","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","processPending","setTimeout","shift","isQueued","queuedCallbacks","flushQueue","callbacks","queue","callback","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","TRACKERS","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","concat","ARRAY_MUTATING_METHODS","queueForNextTick","isObservable","isPropObservable","props","isBoolean","b","objectWatchProp","setupObjState","setupPropAsObservable","setupInterceptors","setupPropInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","unsetCallbackAsWatcherOf","watchers","destroy","deep","setupCallbackStore","store","async","notify","propOldDescriptor","getOwnPropertyDescriptor","val","newVal","priorVal","parent","setupPropState","walk","force","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","asDependent","setCallbackAsWatcherOf","setDependencyTracker","unsetDependencyTracker","stopTrackerNotification","stopWatchingAll","watchersSet","watching","watcherList","arrCurrentProto","__proto__","arrProtoInterceptor","method","_arrCurrentProto$meth","_len","args","_key","apply","alwaysForceExec","objectCreateComputedProp","propValue","newValue","needsInitialization","allowSet","needsNewValue","isGeneratingNewValue","dependencyTracker","forceExec","setPropValue","silentSet","forProp","arrayWatch"],"mappings":"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","file":"observables.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Observables\"] = factory();\n\telse\n\t\troot[\"Observables\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const isNull                   = obj => toString(obj) === \"[object Null]\";\r\nexport const isUndefined              = obj => toString(obj) === \"[object Undefined]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const getPropertyDescriptor    = (value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n    return descriptor;\r\n};\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    objectDefineProperty(obj, prop, getPropertyDescriptor(value, getter, setter, configurable, enumerable, writable));\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\n// *** In a NodeJS env - set HTMLElement to an empty object ***\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (typeof HTMLElement === \"undefined\") {\r\n        global.HTMLElement = class {}; // eslint-disable-line\r\n        global.document = class {};\r\n    }\r\n}\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);\r\nexport const isDocFragment = node => toString(node) === \"[object DocumentFragment]\";\r\n","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb(item, item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nfunction queueForNextTick(callback) {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n}\r\n\r\n/**\r\n * Queue a callback for next tick\r\n * @type {queueForNextTick}\r\n */\r\nnextTick.queue = queueForNextTick;\r\n\r\n//-----------------------------------------------------------[ EXPORTS ]---\r\nexport default nextTick;\r\nexport {\r\n    nextTick,\r\n    queueForNextTick\r\n}\r\n","import {\r\n    objectKeys,\r\n    isArray,\r\n    isObject,\r\n    defineProperty\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport Set from \"@purtuga/common/src/jsutils/Set.js\"\r\nimport nextTick from \"@purtuga/common/src/jsutils/nextTick.js\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\";\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nlet TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\n\r\nconst queueForNextTick = nextTick.queue;\r\nexport const isObservable = obj => !!obj[OBSERVABLE_IDENTIFIER];\r\nexport const isPropObservable = (obj, prop) => obj && prop && isObservable(obj) && !!obj[OBSERVABLE_IDENTIFIER].props[prop];\r\nconst isBoolean = b => (\"boolean\" === typeof b);\r\n\r\n// DEV MODE\r\n// This facilitates when in dev mode and using npm link'ed package.\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (typeof window !== \"undefined\") {\r\n        if (!window._OBSERVABLE_TRACKERS ) {\r\n            window._OBSERVABLE_TRACKERS = TRACKERS;\r\n        } else {\r\n            TRACKERS = window._OBSERVABLE_TRACKERS;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!isObservable(obj)) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !isPropObservable(obj, prop)) {\r\n        setupPropAsObservable(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!isObservable(obj)) {\r\n        defineProperty(\r\n            obj,\r\n            OBSERVABLE_IDENTIFIER,\r\n            {\r\n                deep: false,\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        );\r\n\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!isPropObservable(obj, prop)) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop, configurable, enumerable) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    defineProperty(\r\n        obj,\r\n        prop,\r\n        undefined,\r\n        function() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        function(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        },\r\n        isBoolean(configurable) ? configurable :  propOldDescriptor.configurable || false,\r\n        isBoolean(enumerable) ? enumerable : propOldDescriptor.enumerable || false\r\n    );\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\nexport function setupPropAsObservable(obj, prop, configurable, enumerable) {\r\n    setupPropState(obj, prop);\r\n    setupPropInterceptors(obj, prop, configurable, enumerable);\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also made observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!isObservable(obj)) {\r\n        // OBJECT\r\n        if (isObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropAsObservable(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    queueForNextTick(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback && callback.stopWatchingAll) {\r\n        callback.stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        defineProperty(callback, WATCHER_IDENTIFIER, { watching: new Set() });\r\n\r\n        defineProperty(callback, \"stopWatchingAll\", function(){\r\n            callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                watcherList.delete(callback)\r\n            );\r\n            callback[WATCHER_IDENTIFIER].watching.clear();\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!isObservable(arr)) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            defineProperty(arrProtoInterceptor, method, function arrayMethodInterceptor(...args) {\r\n                // FIXME: need to call `makeObservable` on any value that was inserted, if `deep` is true\r\n                const response = arrCurrentProto[method].call(this, ...args);\r\n                this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                return response;\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        defineProperty(arrProtoInterceptor, \"size\", undefined, function(){\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                    this[OBSERVABLE_IDENTIFIER]\r\n                );\r\n            }\r\n            return this.length;\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        defineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, true);\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        defineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, arrProtoInterceptor);\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","import {defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport nextTick from \"@purtuga/common/src/jsutils/nextTick.js\"\r\nimport {\r\n    OBSERVABLE_IDENTIFIER,\r\n    objectWatchProp,\r\n    setDependencyTracker,\r\n    unsetDependencyTracker,\r\n    makeObservable\r\n} from \"./objectWatchProp.js\";\r\n\r\n//================================================================================\r\nlet alwaysForceExec = false;\r\n\r\n/**\r\n * Creates a computed property on a given object.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} prop\r\n *\r\n * @param {Function} setter\r\n *  A callback function that will be used to retrieve the computed prop's\r\n *  value. Function is called with a context (`this`) of the object and\r\n *  will receive one input param - the Object itself.\r\n *  Callback is executed only when the property is accessed or a tracked\r\n *  dependency changes AND watchers or dependents on this computed exist.\r\n *  To force a value to be generated everytime (even if no dependents/watchers)\r\n *  add a property to the function named `forceExec=true`.\r\n *\r\n * @param {Boolean} [enumerable=true]\r\n *\r\n * @example\r\n * const obj = {\r\n *     firstName: \"paul\",\r\n *     lastName: \"Tavares\"\r\n * };\r\n *\r\n * objectCreateComputedProp(obj, \"name\", function () {\r\n *     return `${ this.firstName } ${ this.lastName }`;\r\n * });\r\n *\r\n * // Or, to always force the callback to generate a value\r\n * function generateName() {\r\n *     return `${ this.firstName } ${ this.lastName }`;\r\n * }\r\n * generateName.forceExec = true;\r\n * objectCreateComputedProp(obj, \"name\", genereateName);\r\n *\r\n *\r\n */\r\nfunction objectCreateComputedProp(obj, prop, setter, enumerable = true) {\r\n    let propValue;\r\n    let newValue;\r\n    let needsInitialization = true;\r\n    let allowSet = false;\r\n    let needsNewValue = true;\r\n    let isGeneratingNewValue = false;\r\n\r\n    const dependencyTracker = () => {\r\n        if (needsNewValue) {\r\n            return;\r\n        }\r\n\r\n        needsNewValue = true;\r\n\r\n        // If we have watchers on this computed prop, then queue the\r\n        // value generator function.\r\n        // else, just notify dependents.\r\n        if (alwaysForceExec || setter.forceExec || obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.size) {\r\n            nextTick.queue(setPropValue);\r\n        }\r\n        else if (obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.size) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n        }\r\n    };\r\n\r\n    const setPropValue = silentSet => {\r\n        // if there is no longer a need to regenerate the value, exit.\r\n        // this can happen when other logic accesses the computed getter\r\n        // between scheduled updates.\r\n        // Also, in order to avoid looping, if value is currently being\r\n        // generated, then also exit.\r\n        if (!needsNewValue || isGeneratingNewValue) {\r\n            return;\r\n        }\r\n\r\n        isGeneratingNewValue = true;\r\n\r\n        try {\r\n            setDependencyTracker(dependencyTracker);\r\n            newValue = setter.call(obj, obj);\r\n            unsetDependencyTracker(dependencyTracker); // IMPORTANT: turn if off right after setter is run!\r\n\r\n            if (silentSet) {\r\n                propValue = newValue;\r\n\r\n                if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                    makeObservable(propValue);\r\n                }\r\n            } else {\r\n                // Update is done via the prop assignment, which means that\r\n                // handing of `deep` and all dependent/watcher notifiers is handled\r\n                // as part of the objectWatchProp() functionality.\r\n                // Doing the update this way also supports the use of these\r\n                // objects with other library that may also intercept getter/setters.\r\n                allowSet = true;\r\n                needsNewValue = false;\r\n                obj[prop] = newValue;\r\n            }\r\n        } catch (e) {\r\n            allowSet = needsNewValue = isGeneratingNewValue = false;\r\n            newValue = undefined;\r\n            unsetDependencyTracker(dependencyTracker);\r\n            throw e;\r\n        }\r\n\r\n        allowSet = needsNewValue = isGeneratingNewValue = false;\r\n        newValue = undefined;\r\n    };\r\n\r\n    dependencyTracker.asDependent = true;\r\n    dependencyTracker.forProp = setPropValue.forProp = prop;\r\n\r\n    // Does property already exists? Delete it.\r\n    if (prop in obj) {\r\n        delete obj[prop];\r\n\r\n        // Was prop an observable? if so, signal that interceptors must be redefined.\r\n        if (obj[OBSERVABLE_IDENTIFIER] && obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = true;\r\n        }\r\n    }\r\n\r\n    defineProperty(\r\n        obj,\r\n        prop,\r\n        undefined,\r\n        function(){\r\n            if (needsInitialization) {\r\n                needsInitialization = false;\r\n                setPropValue(true);\r\n            }\r\n            else if (needsNewValue) {\r\n                setPropValue();\r\n            }\r\n\r\n            return propValue;\r\n        },\r\n        function () {\r\n            if (allowSet) {\r\n                propValue = newValue;\r\n            }\r\n            return propValue;\r\n        },\r\n        true,\r\n        !!enumerable\r\n    );\r\n\r\n    objectWatchProp(obj, prop);\r\n}\r\n\r\n/**\r\n * Set/unset the `forceExec` which (when `true` causes all computed value generator\r\n * to always be called on dependency changes (even if internally to this library,\r\n * there are no watchers/dependents on it).\r\n *\r\n * @param {Boolean} force\r\n */\r\nfunction setForceExec(force) {\r\n    alwaysForceExec = force;\r\n}\r\n\r\n//=======================================================[ EXPORTS ]==========\r\nexport default objectCreateComputedProp;\r\nexport { objectCreateComputedProp, setForceExec }","import { OBSERVABLE_IDENTIFIER, makeArrayWatchable } from \"./objectWatchProp\";\r\n\r\n//========================================================================\r\n\r\n/**\r\n * Watch an array for changes.  Utiltiy will override the array's mutating methods\r\n * so that notification can be provided to watchers when it changes\r\n *\r\n * @param {Array} arr\r\n * @param {Function} [callback]\r\n *  If not defined, then array is simply made \"watchable\"\r\n */\r\nexport function arrayWatch(arr, callback) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        makeArrayWatchable(arr);\r\n    }\r\n\r\n    if (callback) {\r\n        arr[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n    }\r\n\r\n    const unWatch = () => arr[OBSERVABLE_IDENTIFIER].watchers.delete(callback);\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\nexport default arrayWatch;\r\n","export {\r\n    objectWatchProp,\r\n    makeObservable,\r\n    setDependencyTracker,\r\n    stopTrackerNotification,\r\n    unsetDependencyTracker\r\n} from \"./objectWatchProp\"\r\nexport {objectCreateComputedProp} from \"./objectCreateComputedProp\"\r\nexport {arrayWatch} from \"./arrayWatch\""],"sourceRoot":""}